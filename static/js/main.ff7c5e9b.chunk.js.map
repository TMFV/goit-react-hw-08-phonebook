{"version":3,"sources":["components/ContactForm/ContactForm.module.css","redux/app/app-actions.js","redux/app/app-operations.js","redux/app/app-reducer.js","redux/store.js","components/AuthNav.js","views/HomeView.js","views/RegisterView.js","views/LoginView.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","redux/app/contacts-selectors.js","views/ContactsView.js","components/UserMenu.js","components/Navigation.js","components/AppBar.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","filterSet","dispatch","a","actions","get","data","contact","post","then","catch","error","contactId","delete","contacts","createReducer","_","payload","state","operations","type","map","cur","name","includes","alert","types","newArrAfterDel","filter","elem","id","loading","filters","combineReducers","console","log","getDefaultMiddleware","middleware","logger","store","configureStore","reducer","app","appReducer","devTools","process","styles","link","color","activeLink","AuthNav","to","exact","style","activeStyle","container","minHeight","display","justifyContent","alignItems","title","fontWeight","fontSize","textAlign","HomeView","form","width","label","flexDirection","marginBottom","RegisterView","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","autoComplete","onChange","Component","LoginView","onLogin","ContactForm","number","event","currentTarget","contactForAdd","onSubmitData","reset","className","contactform","pattern","required","ContactList","deleteId","Id","del","createList","data-id","onClick","uuid","defaultProps","Filter","setFilterValue","toUpperCase","setFilterToState","getFilter","getContacts","getIsLoading","getVisibleFilterArray","createSelector","newArr","ContactsView","fetchContacts","isLoadingContacts","formSubmitHandler","visibleArray","contactDelete","connect","selectors","appOperations","contactData","str","appActions","mail","marginRight","UserMenu","onLogout","textDecoration","padding","Navigation","header","borderBottom","AppBar","isAuthenticated","App","path","component","ReactDOM","render","StrictMode","persistor","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,mC,oKCIhCC,IAAMC,SAASC,QAAU,yBAEzB,I,IAAMC,EAAoBC,YAAa,8BACjCC,EAAoBD,YAAa,8BACjCE,EAAkBF,YAAa,4BAE/BG,EAAuBH,YAAa,iCACpCI,EAAuBJ,YAAa,iCACpCK,EAAqBL,YAAa,+BAElCM,EAAsBN,YAAa,gCACnCO,EAAsBP,YAAa,gCACnCQ,EAAoBR,YAAa,8BAIxB,GACbS,UAHgBT,YAAa,oBAI7BD,oBACAE,oBACAC,kBACAC,uBACAC,uBACAC,qBACAC,sBACAC,sBACAC,qB,yBCDa,EA1BO,yDAAM,WAAOE,GAAP,iBAAAC,EAAA,6DAC1BD,EAASE,EAAQN,uBADS,kBAGDV,IAAMiB,IAAI,aAHT,gBAGhBC,EAHgB,EAGhBA,KACRJ,EAASE,EAAQL,oBAAoBO,IAJb,gDAMxBJ,EAASE,EAAQP,mBAAR,OANe,yDAAN,uDA0BP,EAjBI,SAACU,GAAD,OAAa,SAACL,GAC/BA,EAASE,EAAQb,qBAEjBH,IACGoB,KAAK,YAAaD,GAClBE,MAAK,gBAAGH,EAAH,EAAGA,KAAH,OAAcJ,EAASE,EAAQX,kBAAkBa,OACtDI,OAAM,SAACC,GAAD,OAAWT,EAASE,EAAQV,gBAAgBiB,SAWxC,EARO,SAACC,GAAD,OAAe,SAACV,GACpCA,EAASE,EAAQT,wBACjBP,IACGyB,OADH,oBACuBD,IACpBH,MAAK,kBAAMP,EAASE,EAAQR,qBAAqBgB,OACjDF,OAAM,SAACC,GAAD,OAAWT,EAASE,EAAQP,mBAAmBc,SCtBpDG,EAAWC,YAAc,IAAD,mBAC3BX,EAAQL,qBAAsB,SAACiB,EAAD,YAAMC,WADT,cAE3Bb,EAAQX,mBAAoB,SAACyB,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BAA4BC,GAA5B,CAAmCD,OAFpC,cAI3BE,GAAwB,SAACD,EAAD,GAA8B,EAApBE,KAAqB,IAAfH,EAAc,EAAdA,QAEvC,OADgBC,EAAMG,KAAI,SAACC,GAAD,OAASA,EAAIC,QACxBC,SAASP,EAAQM,OAG9BE,MAAM,+KACCP,GAHD,GAAN,mBAAWA,GAAX,CAAkBD,OAPM,cAa3Bb,EAAQR,sBAAuB,SAACsB,EAAD,GAA+B,EAArBQ,MAAsB,IAAfT,EAAc,EAAdA,QAC3CU,EAAiBT,EAAMU,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOb,KACxD,OAAO,YAAIU,MAfe,IAmBxBI,EAAUhB,aAAc,GAAD,mBAC1BX,EAAQb,mBAAoB,kBAAM,KADR,cAE1Ba,EAAQX,mBAAoB,kBAAM,KAFR,cAG1BW,EAAQV,iBAAkB,kBAAM,KAHN,cAI1BU,EAAQT,sBAAuB,kBAAM,KAJX,cAK1BS,EAAQR,sBAAuB,kBAAM,KALX,cAM1BQ,EAAQP,oBAAqB,kBAAM,KANT,cAO1BO,EAAQN,qBAAsB,kBAAM,KAPV,cAQ1BM,EAAQL,qBAAsB,kBAAM,KARV,cAS1BK,EAAQJ,mBAAoB,kBAAM,KATR,IAcvBgC,EAAUjB,YAAc,GAAD,eAC1BX,EAAQH,WAAY,SAACiB,EAAD,GACnB,OAD2C,EAAdD,YAKlBgB,cAAgB,CAAEnB,WAAUkB,UAASD,YCvCpDG,QAAQC,IAAIC,eAEZ,IAAMC,EAAU,sBAAOD,eAAP,CAA+BE,MAShCC,EARDC,YAAe,CAC3BC,QAAS,CACPC,IAAKC,GAEPN,aACAO,UAAUC,I,0CCXNC,EAAS,CACbC,KAAM,CAAEC,MAAO,OACfC,WAAY,CAAED,MAAO,UAwBRE,EArBC,kBACd,gCACE,cAAC,IAAD,CACEC,GAAG,YACHC,OAAK,EACLC,MAAOP,EAAOC,KACdO,YAAaR,EAAOG,WAJtB,0BAQA,cAAC,IAAD,CACEE,GAAG,SACHC,OAAK,EACLC,MAAOP,EAAOC,KACdO,YAAaR,EAAOG,WAJtB,uBCjBEH,EAAS,CACbS,UAAW,CACTC,UAAW,qBACXC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdC,MAAO,CACLC,WAAY,IACZC,SAAU,GACVC,UAAW,WAUAC,EANE,kBACf,qBAAKX,MAAOP,EAAOS,UAAnB,SACE,oBAAIF,MAAOP,EAAOc,MAAlB,uDCdEd,EAAS,CACbmB,KAAM,CACJC,MAAO,KAETC,MAAO,CACLV,QAAS,OACTW,cAAe,SACfC,aAAc,KAwEHC,E,4MAnEbpD,MAAQ,CACNK,KAAM,GACNgD,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUnD,EAAoB,EAApBA,KAAMoD,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBrD,EAAOoD,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAK/D,OAE3B,EAAK0D,SAAS,CAAErD,KAAM,GAAIgD,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKhE,MAA/BK,EADD,EACCA,KAAMgD,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,gCACE,qJAEA,uBACEW,SAAUD,KAAKL,aACfxB,MAAOP,EAAOmB,KACdmB,aAAa,MAHf,UAKE,wBAAO/B,MAAOP,EAAOqB,MAArB,+BAEE,uBACE/C,KAAK,OACLG,KAAK,OACLoD,MAAOpD,EACP8D,SAAUH,KAAKT,kBAInB,wBAAOpB,MAAOP,EAAOqB,MAArB,2CAEE,uBACE/C,KAAK,QACLG,KAAK,QACLoD,MAAOJ,EACPc,SAAUH,KAAKT,kBAInB,wBAAOpB,MAAOP,EAAOqB,MAArB,iDAEE,uBACE/C,KAAK,WACLG,KAAK,WACLoD,MAAOH,EACPa,SAAUH,KAAKT,kBAInB,wBAAQrD,KAAK,SAAb,oI,GA7DiBkE,aCXrBxC,GAAS,CACbmB,KAAM,CACJC,MAAO,KAETC,MAAO,CACLV,QAAS,OACTW,cAAe,SACfC,aAAc,KA6DHkB,G,4MAxDbrE,MAAQ,CACNqD,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUnD,EAAoB,EAApBA,KAAMoD,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBrD,EAAOoD,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMQ,QAAQ,EAAKtE,OAExB,EAAK0D,SAAS,CAAErD,KAAM,GAAIgD,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EACqBU,KAAKhE,MAAzBqD,EADD,EACCA,MAAOC,EADR,EACQA,SAEf,OACE,gCACE,uHAEA,uBACEW,SAAUD,KAAKL,aACfxB,MAAOP,GAAOmB,KACdmB,aAAa,MAHf,UAKE,wBAAO/B,MAAOP,GAAOqB,MAArB,2CAEE,uBACE/C,KAAK,QACLG,KAAK,QACLoD,MAAOJ,EACPc,SAAUH,KAAKT,kBAInB,wBAAOpB,MAAOP,GAAOqB,MAArB,iDAEE,uBACE/C,KAAK,WACLG,KAAK,WACLoD,MAAOH,EACPa,SAAUH,KAAKT,kBAInB,wBAAQrD,KAAK,SAAb,sD,GAlDckE,a,oBCoDTG,G,4MA5DbvE,MAAQ,CACNK,KAAM,GACNmE,OAAQ,I,EAEVjB,aAAe,SAACkB,GAAW,IAAD,EACAA,EAAMC,cAAtBrE,EADgB,EAChBA,KAAMoD,EADU,EACVA,MACd,EAAKC,SAAL,eAAiBrD,EAAOoD,K,EAG1BE,aAAe,SAACc,GACdA,EAAMZ,iBACN,IAAIc,EAAgB,CAAEtE,KAAM,EAAKL,MAAMK,KAAMmE,OAAQ,EAAKxE,MAAMwE,QAEhE,EAAKV,MAAMc,aAAaD,GAExB,EAAKE,S,EAGPA,MAAQ,WACN,EAAKnB,SAAS,CAAErD,KAAM,GAAImE,OAAQ,M,4CAEpC,WACE,OACE,qBAAKM,UAAW3C,KAAM4C,YAAtB,SACE,uBAAM7E,KAAK,SAAS+D,SAAUD,KAAKL,aAAnC,UACE,yCAEE,uBACEzD,KAAK,OACLG,KAAK,OACL2E,QAAQ,yHACRtC,MAAM,kcACNuC,UAAQ,EACRd,SAAUH,KAAKT,aACfE,MAAOO,KAAKhE,MAAMK,UAGtB,2CAEE,uBACEH,KAAK,MACLG,KAAK,SACL2E,QAAQ,+FACRtC,MAAM,mlBACNuC,UAAQ,EACRd,SAAUH,KAAKT,aACfE,MAAOO,KAAKhE,MAAMwE,YAItB,wBAAQtE,KAAK,SAAb,kC,GAnDgBkE,a,SCApBc,G,4MACJC,SAAW,SAACC,GACV,EAAKtB,MAAMuB,IAAID,I,EAEjBE,WAAa,WACX,OAAO,EAAKxB,MAAMlE,SAASO,KAAI,SAACd,GAC9B,OACE,qBAAiBuB,GAAIvB,EAAQuB,GAA7B,oBACMvB,EAAQgB,KADd,aACuBhB,EAAQmF,QAC7B,wBACEe,UAASlG,EAAQuB,GACjB4E,QAAS,kBAAM,EAAKL,SAAS9F,EAAQuB,KAFvC,sBAFO6E,uB,4CAaf,WACE,OAAO,6BAAKzB,KAAKsB,mB,GArBKlB,aA4B1Bc,GAAYQ,aAAe,CACzB9F,SAAU,IAGGsF,UCdAS,G,4MAlBbC,eAAiB,SAAAnB,GACf,IAAIhB,EAAQgB,EAAMC,cAAcjB,MAAMoC,cACtC,EAAK/B,MAAMgC,iBAAiBrC,I,4CAG9B,WACE,OACE,gCACE,uDACA,uBAAOU,SAAUH,KAAK4B,wB,GAVTxB,a,SCAf2B,GAAY,SAAC/F,GAAD,OAAWA,EAAMwB,IAAIV,SACjCkF,GAAc,SAAChG,GAAD,OAAWA,EAAMwB,IAAI5B,UAc1B,IACbqG,aAjBmB,SAACjG,GAAD,OAAWA,EAAMwB,IAAIX,SAkBxCkF,aACAC,eACAE,sBAd4BC,aAC5B,CAACH,GAAaD,KACd,SAACnG,EAAUc,GACT,IAAI0F,EAASxG,EAASc,QAAO,qBAAGL,KACzBwF,cAAcvF,SAASI,MAE9B,OAAO,YAAI0F,OCLTC,G,uKACJ,WACErC,KAAKF,MAAMwC,kB,oBAGb,WACE,OACE,sBAAKxB,UAAU,WAAf,UACE,2CACCd,KAAKF,MAAMyC,mBAAqB,6CACjC,cAAC,GAAD,CAAa3B,aAAcZ,KAAKF,MAAM0C,oBACtC,0CACA,cAAC,GAAD,CAAQV,iBAAkB9B,KAAKF,MAAM/E,YACrC,cAAC,GAAD,CACEa,SAAUoE,KAAKF,MAAM2C,aACrBpB,IAAKrB,KAAKF,MAAM4C,uB,GAfCtC,aAoCZuC,gBAfS,SAAC3G,GAAD,MAAY,CAClCuG,kBAAmBK,GAAUX,aAAajG,GAC1CJ,SAAUgH,GAAUZ,YAAYhG,GAChCU,OAAQkG,GAAUb,UAAU/F,GAC5ByG,aAAcG,GAAUV,sBAAsBlG,OAGpB,SAAChB,GAAD,MAAe,CACzCsH,cAAe,kBAAMtH,EAAS6H,MAC9BL,kBAAmB,SAACM,GAAD,OACjB9H,EAAS6H,EAAyBC,KACpCJ,cAAe,SAAChH,GAAD,OACbV,EAAS6H,EAA4BnH,KACvCX,UAAW,SAACgI,GAAD,OAAS/H,EAASgI,EAAWjI,UAAUgI,QAErCJ,CAA8CN,IC7CvDzE,GAAS,CACbS,UAAW,CACTE,QAAS,OACTE,WAAY,UAEdwE,KAAM,CACJC,YAAa,IAEf7G,KAAM,CACJsC,WAAY,IACZuE,YAAa,KAcFC,GAVE,SAAC,GAAD,IAAGF,EAAH,EAAGA,KAAM5G,EAAT,EAASA,KAAM+G,EAAf,EAAeA,SAAf,OACf,sBAAKjF,MAAOP,GAAOS,UAAnB,UACE,uBAAMF,MAAOP,GAAOqF,KAApB,0BAAwCA,KACxC,uBAAM9E,MAAOP,GAAOvB,KAApB,wBAAsCA,KACtC,wBAAQH,KAAK,SAASsF,QAAS4B,EAA/B,wBCfExF,GAAS,CACbC,KAAM,CACJU,QAAS,eACT8E,eAAgB,OAChBC,QAAS,GACT3E,WAAY,IACZb,MAAO,WAETC,WAAY,CACVD,MAAO,YAqBIyF,GAjBI,kBACjB,gCACE,cAAC,IAAD,CAAStF,GAAG,IAAIC,OAAK,EAACC,MAAOP,GAAOC,KAAMO,YAAaR,GAAOG,WAA9D,kBAIA,cAAC,IAAD,CACEE,GAAG,YACHC,OAAK,EACLC,MAAOP,GAAOC,KACdO,YAAaR,GAAOG,WAJtB,0BClBEH,GAAS,CACb4F,OAAQ,CACNjF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZgF,aAAc,sBAWHC,GAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACb,yBAAQxF,MAAOP,GAAO4F,OAAtB,UACE,cAAC,GAAD,IACCG,EAAkB,cAAC,GAAD,IAAe,cAAC,EAAD,QCcvBC,G,4JAlBb,WACE,OACE,sBAAK9C,UAAU,MAAf,UACE,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ5C,OAAK,EAAC2F,KAAK,IAAIC,UAAWhF,IAClC,cAAC,IAAD,CAAQ+E,KAAK,YAAYC,UAAW1E,IACpC,cAAC,IAAD,CAAQyE,KAAK,SAASC,UAAWzD,KACjC,cAAC,IAAD,CAAQwD,KAAK,YAAYC,UAAWzB,WAGxC,cAAC,EAAD,W,GAbUjC,aCHlB2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU5G,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaR,QAAS,KAAMqH,UAAW7G,EAAM6G,UAA7C,SACE,cAAC,IAAD,UACE,cAAC,GAAD,YAKRC,SAASC,eAAe,W","file":"static/js/main.ff7c5e9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactform\":\"ContactForm_contactform__wU_Pk\"};","//import types from \"./app-types\";\nimport axios from \"axios\";\nimport { createAction } from \"@reduxjs/toolkit\";\n//import { uuid } from \"uuidv4\";\n\naxios.defaults.baseURL = \"https://localhost:4040\";\n\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\nconst addContactError = createAction(\"contacts/addContactError\");\n\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\n\nconst fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nconst fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nconst fetchContactError = createAction(\"contacts/fetchContactError\");\n\nconst filterSet = createAction(\"app/setFilterArr\");\n\nexport default {\n  filterSet,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n};\n","import axios from \"axios\";\nimport actions from \"./app-actions\";\n\n//ASYNC Version\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(actions.fetchContactRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(actions.fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error));\n  }\n};\nconst addContact = (contact) => (dispatch) => {\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch((error) => dispatch(actions.addContactError(error)));\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(actions.deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(actions.deleteContactError(error)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./app-actions\";\nimport operations from \"./app-operations\";\n\nconst contacts = createReducer([], {\n  [actions.fetchContactSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n\n  [operations.addContact]: (state, { type, payload }) => {\n    let nameArray = state.map((cur) => cur.name);\n    if (!nameArray.includes(payload.name)) {\n      return [...state, payload];\n    } else {\n      alert(\" Контакт вже є у телефонній книзі!!!\");\n      return state;\n    }\n  },\n  [actions.deleteContactSuccess]: (state, { types, payload }) => {\n    let newArrAfterDel = state.filter((elem) => elem.id !== payload);\n    return [...newArrAfterDel];\n  },\n});\n\nconst loading = createReducer(false, {\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n  [actions.fetchContactRequest]: () => true,\n  [actions.fetchContactSuccess]: () => false,\n  [actions.fetchContactError]: () => false,\n});\n\n// _ - parameter not used\n\nconst filters = createReducer(\"\", {\n  [actions.filterSet]: (state, { payload }) => {\n    return payload;\n  },\n});\n\nexport default combineReducers({ contacts, filters, loading });\n","//import { combineReducers } from \"redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport appReducer from \"./app/app-reducer\";\n\nconsole.log(getDefaultMiddleware());\n\nconst middleware = [...getDefaultMiddleware(), logger];\nconst store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  link: { color: \"red\" },\n  activeLink: { color: \"green\" },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Registration\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","const styles = {\n  container: {\n    minHeight: \"calc(100hv - 50px)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: \"center\",\n  },\n};\n\nconst HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>📕 Contacts app ☎️</h1>\n  </div>\n);\n\nexport default HomeView;\n","import { Component } from \"react\";\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 15,\n  },\n};\n\nclass RegisterView extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div>\n        <h1>Страница регистрации</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Имя\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Зарегистрироваться</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterView;\n","import React, { Component } from \"react\";\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 15,\n  },\n};\n\nclass LoginView extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onLogin(this.state);\n\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div>\n        <h1>Страница логина</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Войти</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginView;\n","import style from \"./ContactForm.module.css\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let contactForAdd = { name: this.state.name, number: this.state.number };\n\n    this.props.onSubmitData(contactForAdd);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <div className={style.contactform}>\n        <form type=\"submit\" onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n              value={this.state.number}\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmitData: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { uuid } from \"uuidv4\";\n\nclass ContactList extends Component {\n  deleteId = (Id) => {\n    this.props.del(Id);\n  };\n  createList = () => {\n    return this.props.contacts.map((contact) => {\n      return (\n        <li key={uuid()} id={contact.id}>\n          {`${contact.name}: ${contact.number}`}\n          <button\n            data-id={contact.id}\n            onClick={() => this.deleteId(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      );\n    });\n  };\n\n  render() {\n    return <ul>{this.createList()}</ul>;\n  }\n}\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  del: PropTypes.func.isRequired,\n};\nContactList.defaultProps = {\n  contacts: [],\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  setFilterValue = event => {\n    let value = event.currentTarget.value.toUpperCase();\n    this.props.setFilterToState(value);\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>Find contacts by name</h4>\n        <input onChange={this.setFilterValue}></input>\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  setFilterToState: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getIsLoading = (state) => state.app.loading;\nconst getFilter = (state) => state.app.filters;\nconst getContacts = (state) => state.app.contacts;\n\n// add memo\n\nconst getVisibleFilterArray = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    let newArr = contacts.filter(({ name }) =>\n      name.toUpperCase().includes(filter)\n    );\n    return [...newArr];\n  }\n);\n\nexport default {\n  getIsLoading,\n  getFilter,\n  getContacts,\n  getVisibleFilterArray,\n};\n","import React, { Component } from \"react\";\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport ContactList from \"../components/ContactList/ContactList\";\nimport Filter from \"../components/Filter/Filter\";\nimport appActions from \"../redux/app/app-actions\";\nimport appOperations from \"../redux/app/app-operations\";\nimport { connect } from \"react-redux\";\nimport selectors from \"../redux/app/contacts-selectors\";\n\nclass ContactsView extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className=\"contacts\">\n        <h1>Phonebook</h1>\n        {this.props.isLoadingContacts && <h2>Loading ...</h2>}\n        <ContactForm onSubmitData={this.props.formSubmitHandler} />\n        <h1>Contacts</h1>\n        <Filter setFilterToState={this.props.filterSet} />\n        <ContactList\n          contacts={this.props.visibleArray}\n          del={this.props.contactDelete}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isLoadingContacts: selectors.getIsLoading(state),\n  contacts: selectors.getContacts(state),\n  filter: selectors.getFilter(state),\n  visibleArray: selectors.getVisibleFilterArray(state),\n});\n\nconst mapDispatchToProrps = (dispatch) => ({\n  fetchContacts: () => dispatch(appOperations.fetchContacts()),\n  formSubmitHandler: (contactData) =>\n    dispatch(appOperations.addContact(contactData)),\n  contactDelete: (contactId) =>\n    dispatch(appOperations.deleteContact(contactId)),\n  filterSet: (str) => dispatch(appActions.filterSet(str)),\n});\nexport default connect(mapStateToProps, mapDispatchToProrps)(ContactsView);\n","const styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  mail: {\n    marginRight: 10,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 20,\n  },\n};\n\nconst UserMenu = ({ mail, name, onLogout }) => (\n  <div style={styles.container}>\n    <span style={styles.mail}>User e-mail: {mail}</span>\n    <span style={styles.name}>User name: {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nexport default UserMenu;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home\n    </NavLink>\n\n    <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Contacts\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","import AuthNav from \"./AuthNav\";\nimport UserMenu from \"./UserMenu\";\nimport Navigation from \"./Navigation\";\n\nconst styles = {\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid #2A363B\",\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nexport default AppBar;\n","import React, { Component } from \"react\";\nimport { Switch, Route, Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport AuthNav from \"./components/AuthNav\";\nimport HomeView from \"./views/HomeView\";\nimport RegisterView from \"./views/RegisterView\";\nimport LoginView from \"./views/LoginView\";\nimport ContactsView from \"./views/ContactsView\";\nimport AppBar from \"./components/AppBar\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <>\n          <AppBar />\n          <Switch>\n            <Router exact path=\"/\" component={HomeView} />\n            <Router path=\"/register\" component={RegisterView} />\n            <Router path=\"/login\" component={LoginView} />\n            <Router path=\"/contacts\" component={ContactsView} />\n          </Switch>\n        </>\n        <AuthNav />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}